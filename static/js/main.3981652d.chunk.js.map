{"version":3,"sources":["hooks/persistedTheme.js","themes/GlobalStyles.js","themes/dark.js","themes/light.js","App.js","index.js"],"names":["usePersistedThemeHook","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","getColorTheme","state","setState","useEffect","setItem","stringify","GlobalStyle","createGlobalStyle","props","theme","colors","pageBackground","tagLineColor","titleColor","dark","title","light","App","setTheme","icon","size","GlobalStyles","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"4MAiBeA,EAVe,SAACC,EAAKC,GAAkB,IAAD,EACzBC,mBANN,SAACF,EAAKC,GAC1B,IAAME,EAAeC,aAAaC,QAAQL,GAC1C,OAAOG,EAAeG,KAAKC,MAAMJ,GAAgBF,EAIdO,CAAcR,EAAKC,IADH,mBAC5CQ,EAD4C,KACrCC,EADqC,KAOnD,OAJAC,qBAAU,WACRP,aAAaQ,QAAQZ,EAAKM,KAAKO,UAAUJ,MACxC,CAACT,EAAKS,IAEF,CAACA,EAAOC,I,QCsCFI,EAlDKC,YAAH,spBAED,SAACC,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,kBACnC,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,gBA4BnB,SAACJ,GAAD,OAAWA,EAAMC,MAAMC,OAAOG,cACzC,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,kBAQ9B,SAACH,GAAD,OAAWA,EAAMC,MAAMC,OAAOG,cAI9B,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOE,gBCpC1BE,EAVF,CACXC,MAAO,OAEPL,OAAQ,CACNC,eAAgB,UAChBE,WAAY,YACZD,aAAc,aCIHI,EAVD,CACZD,MAAO,QAEPL,OAAQ,CACNC,eAAgB,QAChBE,WAAY,UACZD,aAAc,U,OC2BHK,EAzBH,WAAO,IAAD,EACU1B,EAAsB,YAAayB,GAD7C,mBACTP,EADS,KACFS,EADE,KAOVC,EAAuB,UAAhBV,EAAMM,MAAoB,cAAC,IAAD,CAAQK,KAAM,KAAS,cAAC,IAAD,CAAOA,KAAM,KAE3E,OACE,eAAC,IAAD,CAAeX,MAAOA,EAAtB,UACE,cAACY,EAAD,IACA,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,wBAAQA,UAAU,gBAAgBC,QAXtB,WAClBL,EAAyB,UAAhBT,EAAMM,MAAoBD,EAAOE,IAUpC,SACGG,IAEH,kDACA,sECrBVK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3981652d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getColorTheme = (key, initialState) => {\n  const storageValue = localStorage.getItem(key);\n  return storageValue ? JSON.parse(storageValue) : initialState;\n};\n\nconst usePersistedThemeHook = (key, initialState) => {\n  const [state, setState] = useState(getColorTheme(key, initialState));\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default usePersistedThemeHook;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background: ${(props) => props.theme.colors.pageBackground}; \n  color :${(props) => props.theme.colors.tagLineColor};\n  transition: all .5s ease; \n}\n\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100%;\n  \n}\n\n.wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.toggle-button {\n  position: fixed;\n  top: 50px;\n  right: 50px;\n  cursor: pointer;\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  border: none;\n  background-color: ${(props) => props.theme.colors.titleColor};\n  color: ${(props) => props.theme.colors.pageBackground};\n\n   &:focus {\n   outline: none;\n  }\n}\n\nh1 {\n  color: ${(props) => props.theme.colors.titleColor};\n}\n\nspan {\n  color: ${(props) => props.theme.colors.tagLineColor};\n  font-size: 18px;\n  font-style: italic;\n}\n`;\n\nexport default GlobalStyle;\n","const dark = {\n  title: \"dark\",\n\n  colors: {\n    pageBackground: \"#282c36\",\n    titleColor: \"lightpink\",\n    tagLineColor: \"lavender\",\n  },\n};\n\nexport default dark;\n","const light = {\n  title: \"light\",\n\n  colors: {\n    pageBackground: \"white\",\n    titleColor: \"#dc658b\",\n    tagLineColor: \"black\",\n  },\n};\n\nexport default light;\n","import { ThemeProvider } from \"styled-components\";\nimport { CgSun } from \"react-icons/cg\";\nimport { HiMoon } from \"react-icons/hi\";\nimport usePersistedThemeHook from \"./hooks/persistedTheme\";\nimport GlobalStyles from \"./themes/GlobalStyles\";\nimport dark from \"./themes/dark\";\nimport light from \"./themes/light\";\n\nconst App = () => {\n  const [theme, setTheme] = usePersistedThemeHook(\"modeTheme\", light);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === \"light\" ? dark : light);\n  };\n\n  const icon = theme.title === \"light\" ? <HiMoon size={30} /> : <CgSun size={30} />;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <button className=\"toggle-button\" onClick={toggleTheme}>\n            {icon}\n          </button>\n          <h1>DarkMode Kung-Fu</h1>\n          <span>\"To Infinity and Beyond!\"</span>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}